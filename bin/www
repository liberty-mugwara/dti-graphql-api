#!/usr/bin/env node

const { ApolloServer } = require('apollo-server-express');
const app = require('../app');
const {
  resolvers,
  typeDefs,
  dataSources,
  setContext,
} = require('../base_database_app/app');

const { formatGraphqlErrors: formatError } = require('../errors');
const server = new ApolloServer({
  typeDefs,
  resolvers,
  dataSources: () => dataSources,
  formatError,
  context: setContext,
});

server.applyMiddleware({ app });

const port = normalizePort(process.env.PORT);

app.listen({ port }, () =>
  console.log(
    `ğŸš€ Server ready at http://localhost:${port}${server.graphqlPath}`
  )
);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val; // named pipe
  if (port >= 0) return port; // port number
  return false;
}
